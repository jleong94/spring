<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.5</version>
		<relativePath/> 
	</parent>
	
	<groupId>com</groupId>
	<artifactId>spring</artifactId>
	<version>0.0.1</version>
	<name>spring</name>
	<description>Spring Boot Base Project Template</description>
	<url>https://github.com/jleong94/spring</url><!-- Homepage of project -->
	<licenses><!-- Declares the license(s) under which the project is distributed. -->
	    <license>
	        <name>Apache License, Version 2.0</name>
	        <url>https://github.com/jleong94/spring?tab=Apache-2.0-1-ov-file</url>
	        <distribution>repo</distribution>
	    </license>
	</licenses>
	<developers><!-- Main developers/maintainers of the project. -->
	    <developer>
	        <id>jleong94</id>
	        <name>James Leong</name>
	        <email>jleong963@gmail.com</email>
	        <organization></organization>
	        <organizationUrl></organizationUrl>
	    </developer>
	</developers>
	<scm><!-- Information about the source code repository. -->
	    <connection></connection><!-- Read-only connection URL (anonymous checkout). -->
	    <developerConnection></developerConnection><!-- Developer connection (commit access). -->
	    <tag>HEAD</tag><!-- Specific tag/branch (usually HEAD). -->
	    <url></url><!-- Human-friendly repository page (like GitHub repo link). -->
	</scm>
	
	<!-- To compile project into jar/war, please import JDK(jre tab) -->
	<packaging>jar</packaging>
	
	<properties>
		<java.version>21</java.version>
	</properties>
	
	<!-- Proj dependencies -->
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web-services</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-configuration-processor</artifactId>
		    <optional>true</optional>
		</dependency>
		
		<!--Enables hot reloading, auto-restarts, and live reload-->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-devtools</artifactId>
		    <optional>true</optional>
		</dependency>
		<!--Enables hot reloading, auto-restarts, and live reload-->
		
		<!--Java Bean Validation (JSR 380)-->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<!--Java Bean Validation (JSR 380)-->
		
		<!--advanced text-processing utilities-->
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-text</artifactId>
		    <version>1.14.0</version>
		</dependency>
		<!--advanced text-processing utilities-->
		
		<!-- Health Check -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- Prometheus -->
		<dependency>
		    <groupId>io.micrometer</groupId>
		    <artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<!-- Prometheus -->
		<!-- Health Check -->

		<!-- Test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.junit.jupiter</groupId>
		    <artifactId>junit-jupiter-engine</artifactId>
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.mockito</groupId>
		    <artifactId>mockito-core</artifactId>
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-test</artifactId>
		    <scope>test</scope>
		</dependency>
		<!-- Test -->
		
		<!-- Logging -->
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
		    <groupId>net.logstash.logback</groupId>
		    <artifactId>logstash-logback-encoder</artifactId>
		    <version>7.4</version>
		</dependency>
		<!-- DB record changes audit -->
		<dependency>
		    <groupId>org.hibernate.orm</groupId>
		    <artifactId>hibernate-envers</artifactId>
		</dependency>
		<!-- DB record changes audit -->
		<!-- Sleuth for tracing -->
	    <dependency>
	        <groupId>org.springframework.cloud</groupId>
	        <artifactId>spring-cloud-starter-sleuth</artifactId>
	        <version>3.1.11</version>
	    </dependency>
		<!-- Sleuth for tracing -->
		<!-- Logging -->
		
		<!-- Lombok -->
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <scope>provided</scope>
		</dependency>
		<!-- Lombok -->
		
		<!-- Database -->
		<dependency>
		   <groupId>org.springframework.boot</groupId>
		   <artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.mybatis.spring.boot</groupId>
		    <artifactId>mybatis-spring-boot-starter</artifactId>
		    <version>3.0.5</version>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- Database -->
		
		<!-- JSON & API Client -->
		<dependency>
		    <groupId>org.json</groupId>
		    <artifactId>json</artifactId>
		    <version>20230618</version>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.datatype</groupId>
		    <artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.apache.httpcomponents</groupId>
		    <artifactId>httpclient</artifactId>
		    <version>4.5.14</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.httpcomponents</groupId>
		    <artifactId>httpasyncclient</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.glassfish.jersey.core</groupId>
		    <artifactId>jersey-client</artifactId>
		</dependency>
		<dependency>
		    <groupId>jakarta.servlet</groupId>
		    <artifactId>jakarta.servlet-api</artifactId>
		    <scope>provided</scope>
		</dependency>
		<!-- JSON & API Client -->
		
		<!-- Security -->
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-security</artifactId>
	    </dependency>
		<!-- Security -->
		
		<!-- Spring Batch -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-batch</artifactId>
		</dependency>
		<!-- Spring Batch -->
		
		<!-- Bucket4j(Rate Limiter) -->
		<dependency>
		    <groupId>com.bucket4j</groupId>
		    <artifactId>bucket4j-core</artifactId>
		    <version>8.10.1</version>
		</dependency>
		<dependency>
		    <groupId>com.bucket4j</groupId>
		    <artifactId>bucket4j_jdk17-jcache</artifactId>
		    <version>8.14.0</version>
		</dependency>
		<dependency>
		    <groupId>javax.cache</groupId>
		    <artifactId>cache-api</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.github.ben-manes.caffeine</groupId>
		    <artifactId>jcache</artifactId>
		</dependency>
		<!-- Bucket4j(Rate Limiter) -->
		
		<!-- Auto-Retry with Backoff -->
		<dependency>
		    <groupId>org.springframework.retry</groupId>
		    <artifactId>spring-retry</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-aop</artifactId> <!-- Needed for @Retryable to work -->
		</dependency>
		<!-- Auto-Retry with Backoff -->
		
		<!-- Mail -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<!-- Mail -->
		
		<!-- Firebase Admin -->
		<dependency>
		    <groupId>com.google.firebase</groupId>
		    <artifactId>firebase-admin</artifactId>
		    <version>9.5.0</version>
		</dependency>
		<!-- Firebase Admin -->
		
		<!-- SSHJ(SSH2 & SFTP operation) -->
		<dependency>
		    <groupId>com.hierynomus</groupId>
		    <artifactId>sshj</artifactId>
		    <version>0.39.0</version>
		</dependency>
		<!-- SSHJ(SSH2 & SFTP operation) -->
		
		<!-- OpenAPI / Swagger UI -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.8.12</version>
		</dependency>
		<!-- OpenAPI / Swagger UI -->
		
		<!-- Jackson Problem (RFC7807) -->
		<dependency>
			<groupId>org.zalando</groupId>
			<artifactId>problem-spring-web-starter</artifactId>
			<version>0.29.1</version>
		</dependency>
		<!-- Jackson Problem (RFC7807) -->
		
		<!-- Resilience4j -->
		<dependency>
		    <groupId>io.github.resilience4j</groupId>
		    <artifactId>resilience4j-spring-boot3</artifactId>
		    <version>2.3.0</version>
		</dependency>
		<!-- Resilience4j -->
		
		<!-- Optional -->
		<!-- ISO8583 -->
		<dependency>
		    <groupId>net.sf.j8583</groupId>
		    <artifactId>j8583</artifactId>
		    <version>2.0.0</version>
		</dependency>
		<!-- ISO8583 -->
		
		<!-- Fake data -->
		<dependency>
		    <groupId>com.github.javafaker</groupId>
		    <artifactId>javafaker</artifactId>
		    <version>1.0.2</version>
		</dependency>
		<!-- Fake data -->
		<!-- Optional -->
	</dependencies>
	<!-- Proj dependencies -->

	<build>
		<finalName>spring</finalName>
		<resources>
		    <resource>
		        <directory>src/main/resources</directory>
		        <includes>
		            <include>**/*</include>
		        </includes>
		    </resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
            	<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!--Check Component Vulnerabilities Using OWASP Dependency-Check-->
			<plugin>
			    <groupId>org.owasp</groupId>
			    <artifactId>dependency-check-maven</artifactId>
			    <version>12.1.3</version>
			    <configuration>
			        <failBuildOnCVSS>7</failBuildOnCVSS>
			    </configuration>
			    <executions>
			        <execution>
			            <goals>
			                <goal>check</goal>
			            </goals>
			        </execution>
			    </executions>
			</plugin>
			<!--Check Component Vulnerabilities Using OWASP Dependency-Check-->
			<!--To detects any problems in the properties files-->
			<plugin>
			    <groupId>uk.org.webcompere</groupId>
			    <artifactId>spring-properties-cleaner-plugin</artifactId>
			    <version>1.0.6</version>
			    <configuration>
			        <sort>clustered</sort>
			        <whitespace>section</whitespace> <!--To remove vertical white space-->
			    </configuration>
			    <executions>
			        <execution>
			            <goals>
			                <goal>scan</goal>
			            </goals>
			        </execution>
			    </executions>
			</plugin>
			<!--To detects any problems in the properties files-->
		</plugins>
    </build>

</project>
