server:
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  port: 1122 #Server port config. Valid range: 0 → 65535 
  ssl: #SSL TLS, Trust store, Key store
    enabled: true
    enabled-protocols: TLSv1.2,TLSv1.3
    protocol: TLSv1.2
    ciphers: TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
    trust-store: file:./src/main/resources/security/truststore.p12 # Holds trusted public certificates
    trust-store-password: changeit
    trust-store-type: PKCS12
    key-store: file:./src/main/resources/security/keystore.p12 # Holds your own identity: your server's private key + certificate
    key-store-password: changeit
    key-store-type: PKCS12
    keyAlias: tomcat #Tell spring which key alias imported in PKCS12 file should use
    client-auth: want #need: client must provide valid cert (strict), want: client cert is optional, none: no client validation (default)
  http2:
    enabled: true
spring: #DB Config(Git will auto build using the details config in repository secrets)
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 30 # Defines how many connections can be open concurrently
      minimum-idle: 10 # Minimum idle connections in the pool(in count)
      idle-timeout: 600000  # Helps recycle connections and free up resources(in milliseconds). idle-timeout must be less than max-lifetime
      max-lifetime: 1800000  # Helps recycle connections and free up resources(in milliseconds). idle-timeout must be less than max-lifetime
      connection-timeout: 30000  # Maximum time to wait for a connection from the pool before throwing an exception(in milliseconds)
      leak-detection-threshold: 20000  # Helps identify if connections are not closed properly(in milliseconds)
      pool-name: HikariCP
      data-source-properties:
        # JDBC driver optimizations that reduce parsing overhead and improve latency
        cachePrepStmts: true # Enable caching of prepared statements
        prepStmtCacheSize: 250 # Sets the number of prepared statements that the driver will cache per connection(in count)
        prepStmtCacheSqlLimit: 2048 # Sets the maximum length of SQL statements that will be cached
        useServerPrepStmts: true # Uses server-side prepared statements (MySQL feature); helps reduce client-side parsing
        useSSL: true
        requireSSL: true
        allowPublicKeyRetrieval: false
        # List of ssl mode:
        # DISABLED - SSL is not used
        # PREFERRED - SSL is used if available on the server
        # REQUIRED - SSL is required, but no certificate verification is done.
        # VERIFY_CA - SSL is required, and server cert must be signed by a trusted CA.
        # VERIFY_IDENTITY - Like VERIFY_CA, plus it validates hostname matches certificate CN/SAN.
        sslMode: VERIFY_IDENTITY
        trustCertificateKeyStoreUrl: file:./src/main/resources/security/keystore.p12
        trustCertificateKeyStorePassword: changeit
        trustCertificateKeyStoreType: PKCS12
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
      naming: #To maintain the exact same table & column name defined in JPA class
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
    show-sql: true
  batch: #Batch job enablement config
    job:
      enabled: false
  task: #Schduler enablement config
    scheduling:
      enabled: true
  mail:
    host: ${SMTP_HOST}
    port: ${SMTP_PORT}
    username: ${SMTP_USERNAME}
    password: ${SMTP_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
    protocol: smtp
    default-encoding: UTF-8
mybatis:
  mapper-locations: 
  - file:./src/main/resources/mybatis/mapper/*.xml # Location(s) of your MyBatis XML mapper files.
  type-aliases-package: com.modal # Package(s) to scan for domain/model classes to create type aliases automatically.
  configuration:
    # Automatically converts column names with underscores (snake_case) to camelCase in Java objects.
    # Example: database column "user_name" → Java property "userName".
    map-underscore-to-camel-case: true
    # Enables MyBatis first-level (per-session) and second-level (optional global) caching.
    # Can improve performance for repeated queries.
    cache-enabled: true
    # Sets the default fetch size for queries.  
    # This is a hint to JDBC driver on how many rows to fetch from DB at a time.
    default-fetch-size: 100
    # Sets the default statement timeout in seconds.  
    # If a query takes longer than this, it will throw a timeout exception.
    default-statement-timeout: 30
project:
  log:
    name: ./logs #dot refer to current path
rate:
  limit:
    capacity: 10 #max number of tokens the bucket can hold 
    tokens: 10 #new tokens add per period
    period: 60
allowed:
  origins: localhost:8080
management: #Spring actuator
  endpoints:
    web:
      exposure:
      #endpoint: /actuator Description: Shows list of available endpoints
      #endpoint: /actuator/health Description: Health check info
      #endpoint: /actuator/info Description: App metadata
      #endpoint: /actuator/metrics Description: System and app metrics
      #endpoint: /actuator/env Description: Environment properties
        include: health,info #health,info,metrics,env
  endpoint:
    health:
      show-details: always
  health:
    mail:
      enabled: true
fcm:
  credentialsClasspathPath: "security/firebase/firebase-service-account.json"
springdoc:
  api-docs:
    enabled: true
    path: /api-docs #OpenAPI JSON spec endpoint
  swagger-ui:
    enabled: true
    path: /docs #Swagger UI spec endpoint
    operationsSorter: method #API endpoints are ordered consistently (by HTTP method or tag).
    tagsSorter: alpha #API endpoints are ordered consistently (by HTTP method or tag).
    display-request-duration: true #Shows how long each API call takes (helps with perf debugging).
    tryItOutEnabled: true #Lets developers call APIs from the browser directly.
    syntaxHighlight: #Pretty-prints JSON/XML responses.
      activated: true
  group-configs: #Splits OpenAPI docs into groups.
    - group: v1
      paths-to-match: /api/v1/**
    - group: v2
      paths-to-match: /api/v2/**
resilience4j:
  timelimiter: #Must be in async
    configs: #Global Default Configuration
      default:
        timeout-duration: 1s
        cancel-running-future: true
    instances:
      getAsyncTemplate:
        timeout-duration: 1s
        cancel-running-future: true