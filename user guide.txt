Command for run Java JAR file:
java -Xms256m -Xmx2048m -XX:+PrintGCDetails -jar app.jar

Command for run Java class file:
@echo off
SET PROJECT_NAME=app
SET BASE_DIR=C:\jakarta-tomcat\webapps
SET CLASSPATH=%BASE_DIR%\%PROJECT_NAME%\WEB-INF\classes
SET LIBPATH=%BASE_DIR%\%PROJECT_NAME%\WEB-INF\lib
SET CLASSPATH=%CLASSPATH%;%LIBPATH%\*;
java -Xms256m -Xmx2048m -XX:+PrintGCDetails package_name.class_name
exit;

Handling for HttpServlet
request.setCharacterEncoding("UTF-8"); response.setCharacterEncoding("UTF-8"); response.setContentType("text/html; charset=UTF-8");
request.getParameter("") == null || request.getParameter("").trim().isEmpty() ? "" : StringEscapeUtils.escapeHtml4(request.getParameter("")).trim();

Command(Spring):
1. verify clean install - Build spring project into jar or war file.
2. ./mvnw compile - Run in cursor terminal to get .class file output & jar or war file for deployment.

Lombok:
Need to download the jar & click the jar to install at eclipse installation path.

Github CI/CD:
1. yml file for auto build should locate at .github\workflows
2. Click on profile pic after logged in GitHub, look for developer setting & click on it
3. Tick for repo & workflow in personal access token->tokens(classic)
4. Click on generate token & copy the secret
5. Add repository secret in GitHub repo ➔ settings ➔ secrets and variables ➔ actions ➔ new repository secret. Make sure the variable name must be same with the parameter, GITHUB_TOKEN found in yml file

Command to import public cert into cacerts:
1. Open cmd as admin & cd the path to <Java installation path>>\bin
2. keytool -importcert -trustcacerts -alias <alias name for source file> -file <source file path> -keystore <cacerts path>

Deploy app to fly.io:
# Install Flyctl
powershell -Command "iwr https://fly.io/install.ps1 -useb | iex"
# Verify installation
flyctl version
# Authenticate with your Fly.io account
flyctl auth login
# Create a new app (replace name & region as needed)
flyctl launch --name springboot-app --region sin --no-deploy
#It will generate fly.toml config in repo root. Then, commit to git.
